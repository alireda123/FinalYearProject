"use client";
import AuthButton from "../components/layoutcomponents/AuthButton";
import { createClient } from "@/utils/supabase/supabase";
import Darkmodetoggle from "@/components/layoutcomponents/Darkmodetoggle";
import Navbar from "@/components/layoutcomponents/Navbar";
import ArticleDisplay from "@/components/Articles/ArticleDisplay";
import Link from "next/link";
import { useEffect, useState } from "react";
import {
  Card,
  CardHeader,
  CardBody,
  CardFooter,
  Typography,
  Button,
} from "@material-tailwind/react";
export function CardDefault({ name, explanation, index, image}){
  return(
    <Card className="mt-6 w-96">
      <CardHeader color="blue-gray" className="relative h-56">
        <img
          src={image}
          alt="card-image"
          className="w-full h-full"
        />
      </CardHeader>
      <CardBody className="text-center">
        <Typography variant="h3" color="blue-gray" className="mb-2">
          {name}
        </Typography>
        <Typography className="text-xl">
          {explanation}
        </Typography>
      </CardBody>
      <CardFooter className="pt-0"></CardFooter>
    </Card>
  );
}

export default function Page() {
  const [article, setArticle] = useState(null);
  const [user, setUser] = useState<null | unknown>(null);
  const image1 = "https://th.bing.com/th?id=OIP.gXucCuPMpLn4-7u48_gtFQHaJc&w=221&h=282&c=8&rs=1&qlt=90&o=6&pid=3.1&rm=2"
  const image2 = "https://th.bing.com/th/id/OIP.WCQMLEXocQvMhWDBRCXpiAHaEZ?w=289&h=180&c=7&r=0&o=5&pid=1.7"
  const image3 = "https://th.bing.com/th/id/OIP.SEh1AzzikmLVx28b642GTwHaE9?w=262&h=180&c=7&r=0&o=5&pid=1.7"
  const supabase = createClient();

  useEffect(() => {
    async function fetchUser() {
      const session = await supabase.auth.getSession();
      setUser(session);
    }
    async function fetchArticle() {
      const { data, error } = await supabase.from("articles").select("*");
      setArticle(data);
      console.log(data);
    }
    async function fetchBuckers() {
      const { data, error } = await supabase.storage.getBucket(
        "articlesimages"
      );
      data && console.log(data);
    }
    fetchArticle();
    fetchBuckers();
    fetchUser();
  }, []);
  const explanation1 = 'Highlighting misinformation is the first step to mitigating the harms of it. By highlighting misinformation we make sure that people are wary of it and understand that they cannot make truthful decisions based on it.'
  const explanation2 = 'After highlighting the misinformation, the misinformation is corrected using credible sources. We do not only correct however, we also explain the impact and danger of each claim of misinformation too.'
  const explanation3 = 'Not only do we fact-check and correct, we also contact the source of misinformation to correct their comments. Those who have been misinformed are much more likely to concede they were wrong if the original claimant corrects themselves.'
  //gradient-text class generated by generative AI
  return (
    <div className="landingpageanimation flex justify-center max-w-80 sm:max-w-none flex-col items-center [&>*]:my-14 ">
     
      <div className=" text-center  text-wrap  sm:!max-w-none" >
      <h1 className="  text-4xl md:!text-7xl  mb-9 font-bold">
        Welcome to <span className="gradient-text">IllumiFact</span>
      </h1>
      <h3 className="text-shadow text-2xl md:!text-4xl text-center">We shed light on the political misinformation<br/> in society that threatens our democracy<br/> and the lives of those at home and abroad.</h3>
      </div>
      <div className=" hidden  xl:!flex flex-col   [&>*]:my-3 first:!my-0 xl:!flex-row [&>*]:mx-3 " >
        <CardDefault name='Highlight' explanation={explanation1} image={image1}/>
        <div className="mb-14">
          <CardDefault  name='Correct' explanation={explanation2} image={image2}/>
        </div>
        <CardDefault name='Hold to account' explanation={explanation3} image={image3}/>
      </div>
      
      <div className=" gap-14 px-3 grid sm:grid-cols-1 lg:grid-cols-2 xl:!grid-cols-3 " >
  {article && article.map((item, index) => (
       
          <ArticleDisplay data-testid="articledisplay" user={user}  post={item} />
        
          
      ))}
      </div>
    </div>
  );
}
